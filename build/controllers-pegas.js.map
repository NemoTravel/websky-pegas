{"version":3,"sources":["controllers-pegas.js"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","BaggageControllerPegas","$element","$scope","backend","utils","switchService","vm","locked","checkServiceRemovalProhibited","service","active","removeExtraService","resetService","removeByPassenger","passengerNum","passenger_id","orderInfo","passengers","id","baggageCountChangeHandler","subgroupNum","baggageItem","delta","routePartNum","modifyExtraService","segment_id","plainFlights","routeParts","mainFlightNum","subgroup","subgroups","amount","alreadySelectedCount","service_type","serviceType","rfisc","getSelectedBaggageByRoutePartsAndPassengers","map","routePart","availableExtraServicesByPassengersAndSubgroups","items","selectedNum","forEach","item","itemNum","selectRoutePartPassenger","selectedRoutePartNum","selectedPassenger","changeBaggageBySelect","selectedBaggageNum","selectedBaggageByRoutePartsAndPassengers","selectedBaggage","newBaggageNum","selectedBaggageByRoutePartsAndPassengersView","newBaggage","newParams","passengerId","mainSegmentId","subgroupCode","getSelectedPassengerRoutePartBaggage","currency","count","cost","totalPrice","Big","plus","toFixed","scrollToStart","passengersTableContainer","scrollTo","scrollToEnd","scrollWidth","mobileTableScrollHandler","scrollLeft","clientWidth","scrollRight","canScrollRight","canScrollLeft","$apply","removePassengerFlightBaggage","flightNum","this","find","optionsByRoutePartsAndPassengers","createOptionsForUiSelect","title","getAlias","$watch","angular","copy","addOrderInfoListener","on","component","templateUrl","controller","controllerAs","bindings","2","MealControllerPegas","selectFirstAvailablePassengerFlight","selectFlightPassenger","selectedFlight","updateMealMenu","getFirstAvailableFlightNum","getFirstAvailablePassengerNum","mealMenu","itemsByPassengerSegments","mealMenuSubgroup","mealCountChangeHandler","mealItem","removePassengerFlightMeal","getSelectedPassengerFlightMeal","groupedEditableExtraServices","meal","availableBySegments","availableByPassengerSegments","hasAlias","getAvailablePassengersCount","getParam","mealImagesPath","3","SeatControllerPegas","$timeout","modifyError","then","clearFlightPassenger","resp","error","seatMap","setSeatMapContainerTopPosition","reset","seatMapContainerTopPosition","jQuery","css","updateSeatMap","loadingSeatMap","seatMapError","setPassengerFlightSeat","chair","cabinAllowed","rowNumber","available","value","number","commonSubgroup","updateSunInfoByFlights","sunInfoByFlights","flight","sunInfo","origincity","departuredate","departuretime","destinationcity","arrivaldate","arrivaltime","getAvailablePassengersCountWrap","filter","pax","hasSeats","removePassengerFlightSeat","4","./components/es-baggage-pegas/es-baggage-pegas","./components/es-meal-pegas/es-meal-pegas","./components/es-seat-pegas/es-seat-pegas"],"mappings":"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","file":"controllers-pegas.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){\n\"use strict\";\nangular.module('wes').component('esBaggagePegas', {\n    templateUrl: 'components/es-baggage-pegas/es-baggage-pegas.html',\n    controller: ['$element', '$scope', 'backend', 'utils', BaggageControllerPegas],\n    controllerAs: 'vm',\n    bindings: {\n        service: '=service',\n        locked: '=locked'\n    }\n});\n\nfunction BaggageControllerPegas($element, $scope, backend, utils) {\n\n    var vm = this,\n        passengersTableContainer = $element.find('div.passengersTableContainer');\n\n    vm.switchService = switchService;\n    vm.resetService = resetService;\n    vm.baggageCountChangeHandler = baggageCountChangeHandler;\n    vm.selectRoutePartPassenger = selectRoutePartPassenger;\n    vm.changeBaggageBySelect = changeBaggageBySelect;\n    vm.removeByPassenger = removeByPassenger;\n    vm.getSelectedPassengerRoutePartBaggage = getSelectedPassengerRoutePartBaggage;\n    vm.scrollToStart = scrollToStart;\n    vm.scrollToEnd = scrollToEnd;\n    vm.removePassengerFlightBaggage = removePassengerFlightBaggage;\n\n    vm.checkServiceRemovalProhibited = backend.checkServiceRemovalProhibited;\n\n    vm.canScrollRight = true;\n    vm.canScrollLeft = false;\n\n    vm.selectedRoutePartNum = 0;\n    vm.selectedPassenger = 0;\n\n    vm.optionsByRoutePartsAndPassengers = vm.service.routeParts.map(function (routePart) {\n        return routePart.availableExtraServicesByPassengersAndSubgroups.map(function (subgroups) {\n            return subgroups.map(function (items) {\n                return utils.createOptionsForUiSelect(items, {\n                    title: backend.getAlias('web.extraServices.baggage.noneSelected')\n                });\n            });\n        });\n    });\n\n\n    $scope.$watch('vm.service.routeParts', function () {\n        /* jshint maxlen: 200 */\n        vm.selectedBaggageByRoutePartsAndPassengers = getSelectedBaggageByRoutePartsAndPassengers(vm.service.routeParts);\n        vm.selectedBaggageByRoutePartsAndPassengersView = angular.copy(\n            vm.selectedBaggageByRoutePartsAndPassengers\n        );\n    });\n\n    backend.addOrderInfoListener(function (orderInfo) {\n        vm.orderInfo = orderInfo;\n    }, false, true);\n\n    passengersTableContainer.on('scroll', mobileTableScrollHandler);\n\n    function switchService() {\n        if (!vm.locked && !backend.checkServiceRemovalProhibited('baggage')) {\n            vm.service.active = !vm.service.active;\n            if (!vm.service.active) {\n                backend.removeExtraService({\n                    code: 'baggage'\n                });\n            }\n        }\n    }\n\n    function resetService() {\n      backend.removeExtraService({\n          code: 'baggage'\n      });\n    }\n\n    function removeByPassenger(passengerNum) {\n        if (!vm.locked) {\n            backend.removeExtraService({\n                code: 'baggage',\n                passenger_id: vm.orderInfo.passengers[passengerNum].id\n            });\n        }\n    }\n\n    function baggageCountChangeHandler(subgroupNum, baggageItem, delta, passengerNum, routePartNum) {\n        if (!vm.locked) {\n            backend.modifyExtraService({\n                code: vm.service.code,\n                passenger_id: vm.orderInfo.passengers[passengerNum].id,\n                segment_id: vm.orderInfo.plainFlights[vm.service.routeParts[routePartNum].mainFlightNum].id,\n                subgroup: vm.service.subgroups[subgroupNum].code,\n                amount: (baggageItem.alreadySelectedCount || 0) + delta,\n                service_type: baggageItem.serviceType,\n                rfisc: baggageItem.rfisc\n            });\n        }\n    }\n\n    function getSelectedBaggageByRoutePartsAndPassengers(routeParts) {\n        return routeParts.map(function (routePart) {\n            return routePart.availableExtraServicesByPassengersAndSubgroups.map(function (subgroups) {\n                return subgroups.map(function (items) {\n                    var selectedNum;\n                    items.forEach(function (item, itemNum) {\n                        if (item.amount) {\n                            selectedNum = itemNum;\n                        }\n                    });\n                    return selectedNum;\n                });\n            });\n        });\n    }\n\n    function selectRoutePartPassenger(routePartNum, passengerNum) {\n        vm.selectedRoutePartNum = routePartNum;\n        vm.selectedPassenger = passengerNum;\n    }\n\n    function changeBaggageBySelect(passengerNum, routePartNum, subgroupNum) {\n        /* jshint maxlen: 200 */\n        var selectedBaggageNum = vm.selectedBaggageByRoutePartsAndPassengers[routePartNum][passengerNum][subgroupNum],\n            selectedBaggage = vm.service.routeParts[routePartNum].availableExtraServicesByPassengersAndSubgroups[passengerNum][subgroupNum][selectedBaggageNum],\n            newBaggageNum = vm.selectedBaggageByRoutePartsAndPassengersView[routePartNum][passengerNum][subgroupNum],\n            newBaggage = vm.service.routeParts[routePartNum].availableExtraServicesByPassengersAndSubgroups[passengerNum][subgroupNum][newBaggageNum],\n            newParams = false;\n\n        if (!vm.locked) {\n\n            if (newBaggage) {\n                newParams = {\n                    code: 'baggage',\n                    passenger_id: newBaggage.passengerId,\n                    segment_id: newBaggage.mainSegmentId,\n                    subgroup: newBaggage.subgroupCode,\n                    amount: 1,\n                    service_type: newBaggage.serviceType,\n                    rfisc: newBaggage.rfisc\n                };\n            }\n\n            if (newParams) {\n                backend.modifyExtraService(newParams);\n            } else if (selectedBaggage) {\n                backend.removeExtraService({\n                    code: 'baggage',\n                    passenger_id: selectedBaggage.passengerId,\n                    segment_id: selectedBaggage.mainSegmentId,\n                    subgroup: selectedBaggage.subgroupCode,\n                    service_type: selectedBaggage.serviceType,\n                    rfisc: selectedBaggage.rfisc\n                });\n            }\n\n        }\n\n    }\n\n    function getSelectedPassengerRoutePartBaggage(passengerNum, routePartNum) {\n\n        var count = 0,\n            cost = 0,\n            currency,\n            routePart = vm.service.routeParts[routePartNum],\n            subgroups = routePart.availableExtraServicesByPassengersAndSubgroups[passengerNum];\n\n        if (subgroups && subgroups.length) {\n            subgroups.forEach(function (items) {\n                items.forEach(function (item) {\n                    if (item.amount) {\n                        count += item.amount;\n                    }\n                    if (item.totalPrice) {\n                        cost = Big(cost).plus(item.totalPrice).toFixed(2);\n                        currency = item.currency;\n                    }\n                });\n            });\n        }\n\n        if (count) {\n            return {\n                count: count,\n                cost: cost,\n                currency: currency\n            };\n        } else {\n            return false;\n        }\n\n    }\n\n    function scrollToStart() {\n        passengersTableContainer.scrollTo(0);\n    }\n\n    function scrollToEnd() {\n        passengersTableContainer.scrollTo(passengersTableContainer[0].scrollWidth);\n    }\n\n    function mobileTableScrollHandler() {\n        var scrollLeft = passengersTableContainer[0].scrollLeft,\n            scrollWidth = passengersTableContainer[0].scrollWidth,\n            clientWidth = passengersTableContainer[0].clientWidth,\n            scrollRight = scrollWidth - clientWidth - scrollLeft;\n        vm.canScrollRight = (scrollRight !== 0);\n        vm.canScrollLeft = (scrollLeft !== 0);\n        $scope.$apply();\n    }\n\n    function removePassengerFlightBaggage(passengerNum, flightNum) {\n        if (\n            !vm.locked &&\n            !backend.checkServiceRemovalProhibited('baggage', passengerNum, flightNum)\n        ) {\n            backend.removeExtraService({\n                code: 'baggage',\n                passenger_id: vm.orderInfo.passengers[passengerNum].id,\n                segment_id: vm.orderInfo.plainFlights[flightNum].id\n            });\n        }\n    }\n\n}\n\n},{}],2:[function(require,module,exports){\n\"use strict\";\nangular.module('app').component('esMealPegas', {\n    templateUrl: 'components/es-meal-pegas/es-meal-pegas.html',\n    controller: ['$scope', '$element','backend', 'utils', MealControllerPegas],\n    controllerAs: 'vm',\n    bindings: {\n        service: '=service',\n        locked: '=locked'\n    }\n});\n\nfunction MealControllerPegas($scope, $element, backend, utils) {\n\n    var vm = this,\n        passengersTableContainer = $element.find('div.passengersTableContainer');\n\n    vm.switchService = switchService;\n    vm.resetService = resetService;\n    vm.selectFlightPassenger = selectFlightPassenger;\n    vm.selectFirstAvailablePassengerFlight = selectFirstAvailablePassengerFlight;\n    vm.mealCountChangeHandler = mealCountChangeHandler;\n    vm.removePassengerFlightMeal = removePassengerFlightMeal;\n    vm.getSelectedPassengerFlightMeal = getSelectedPassengerFlightMeal;\n    vm.scrollToStart = scrollToStart;\n    vm.scrollToEnd = scrollToEnd;\n    vm.hasAlias = backend.hasAlias;\n    vm.getAvailablePassengersCount = utils.getAvailablePassengersCount;\n    vm.checkServiceRemovalProhibited = backend.checkServiceRemovalProhibited;\n\n    vm.canScrollRight = true;\n    vm.canScrollLeft = false;\n\n    vm.selectedFlight = 0;\n    vm.selectedPassenger = 0;\n\n    if (backend.getParam('site.externalStorageBaseUrl')) {\n        vm.mealImagesPath = backend.getParam('site.externalStorageBaseUrl') + '/img/content/meal';\n    } else {\n        vm.mealImagesPath = './themes/websky/assets/static/img/content/meal';\n    }\n\n    backend.addOrderInfoListener(function (orderInfo) {\n        vm.orderInfo = orderInfo;\n    }, false, true);\n\n    $scope.$watch('vm.service', function () {\n        updateMealMenu();\n    });\n\n    passengersTableContainer.on('scroll', mobileTableScrollHandler);\n\n    if (vm.service.active) {\n        updateMealMenu();\n    }\n\n    function switchService() {\n        if (!vm.locked && !backend.checkServiceRemovalProhibited('meal')) {\n            vm.service.active = !vm.service.active;\n            if (vm.service.active) {\n                selectFirstAvailablePassengerFlight();\n            } else {\n                backend.removeExtraService({\n                    code: 'meal'\n                });\n            }\n        }\n    }\n\n    function resetService() {\n      backend.removeExtraService({\n          code: 'meal'\n      });\n    }\n\n    function selectFlightPassenger(flightNum, passengerNum) {\n        vm.selectedFlight = flightNum;\n        vm.selectedPassenger = passengerNum;\n        updateMealMenu();\n    }\n\n    function selectFirstAvailablePassengerFlight() {\n        vm.selectedFlight = getFirstAvailableFlightNum();\n        vm.selectedPassenger = getFirstAvailablePassengerNum(vm.selectedFlight);\n        updateMealMenu();\n    }\n\n    function updateMealMenu() {\n        vm.mealMenu = vm.service.itemsByPassengerSegments[vm.selectedPassenger][vm.selectedFlight];\n        vm.mealMenuSubgroup = false;\n    }\n\n    function mealCountChangeHandler(subgroupNum, mealItem, delta) {\n        if (!vm.locked) {\n            backend.modifyExtraService({\n                code: 'meal',\n                passenger_id: vm.orderInfo.passengers[vm.selectedPassenger].id,\n                segment_id: vm.orderInfo.plainFlights[vm.selectedFlight].id,\n                subgroup: vm.service.subgroups[subgroupNum],\n                amount: (mealItem.alreadySelectedCount || 0) + delta,\n                service_type: mealItem.serviceType,\n                rfisc: mealItem.rfisc\n            });\n        }\n    }\n\n    function removePassengerFlightMeal(passengerNum, flightNum) {\n        if (!vm.locked && !backend.checkServiceRemovalProhibited('meal', passengerNum, flightNum)) {\n            backend.removeExtraService({\n                code: 'meal',\n                passenger_id: vm.orderInfo.passengers[passengerNum].id,\n                segment_id: vm.orderInfo.plainFlights[flightNum].id\n            });\n        }\n    }\n\n    function getSelectedPassengerFlightMeal(passengerNum, flightNum) {\n\n        var count = 0,\n            cost = 0,\n            currency;\n\n        if (\n            vm.orderInfo.groupedEditableExtraServices &&\n            vm.orderInfo.groupedEditableExtraServices.meal &&\n            vm.orderInfo.groupedEditableExtraServices.meal[passengerNum] &&\n            vm.orderInfo.groupedEditableExtraServices.meal[passengerNum][flightNum] &&\n            vm.orderInfo.groupedEditableExtraServices.meal[passengerNum][flightNum].length\n        ) {\n            vm.orderInfo.groupedEditableExtraServices.meal[passengerNum][flightNum].forEach(function (item) {\n                if (item.amount) {\n                    count += item.amount;\n                }\n                if (item.totalPrice) {\n                    cost = Big(cost).plus(item.totalPrice).toFixed(2);\n                    currency = item.currency;\n                }\n            });\n        }\n\n        if (count) {\n            return {\n                count: count,\n                cost: cost,\n                currency: currency\n            };\n        } else {\n            return false;\n        }\n\n    }\n\n    function scrollToStart() {\n        passengersTableContainer.scrollTo(0);\n    }\n\n    function scrollToEnd() {\n        passengersTableContainer.scrollTo(passengersTableContainer[0].scrollWidth);\n    }\n\n    function mobileTableScrollHandler() {\n        var scrollLeft = passengersTableContainer[0].scrollLeft,\n            scrollWidth = passengersTableContainer[0].scrollWidth,\n            clientWidth = passengersTableContainer[0].clientWidth,\n            scrollRight = scrollWidth - clientWidth - scrollLeft;\n        vm.canScrollRight = (scrollRight !== 0);\n        vm.canScrollLeft = (scrollLeft !== 0);\n        $scope.$apply();\n    }\n\n    function getFirstAvailableFlightNum() {\n        var i;\n        for (i = 0; i < vm.orderInfo.plainFlights.length; i++) {\n            if (vm.service.availableBySegments[i]) {\n                return i;\n            }\n        }\n        return -1;\n    }\n\n    function getFirstAvailablePassengerNum(flightNum) {\n        var i;\n        if (vm.service.availableByPassengerSegments) {\n            for (i = 0; i < vm.orderInfo.passengers.length; i++) {\n                if (vm.service.availableByPassengerSegments[i][flightNum]) {\n                    return i;\n                }\n            }\n        }\n        return -1;\n    }\n\n}\n\n},{}],3:[function(require,module,exports){\n\"use strict\";\nangular.module('wes').component('esSeatPegas', {\n    templateUrl: 'components/es-seat-pegas/es-seat-pegas.html',\n    controller: ['$scope', '$element', '$timeout', 'backend', 'utils', SeatControllerPegas],\n    controllerAs: 'vm',\n    bindings: {\n        service: '=service',\n        locked: '=locked'\n    }\n});\n\nfunction SeatControllerPegas($scope, $element, $timeout, backend, utils) {\n\n    var vm = this,\n        passengersTableContainer = $element.find('div.passengersTableContainer'),\n        seatMapContainerTopPosition = '0px';\n\n    vm.switchService = switchService;\n    vm.resetService = resetService;\n\n    vm.selectFlightPassenger = selectFlightPassenger;\n    vm.selectFirstAvailablePassengerFlight = selectFirstAvailablePassengerFlight;\n    vm.setPassengerFlightSeat = setPassengerFlightSeat;\n\n    vm.hasAlias = backend.hasAlias;\n\n    vm.scrollToStart = scrollToStart;\n    vm.scrollToEnd = scrollToEnd;\n\n    vm.getAvailablePassengersCount = utils.getAvailablePassengersCount;\n    vm.getAvailablePassengersCountWrap = getAvailablePassengersCountWrap;\n\n    vm.removePassengerFlightSeat = removePassengerFlightSeat;\n\n    vm.checkServiceRemovalProhibited = backend.checkServiceRemovalProhibited;\n\n    vm.canScrollRight = true;\n    vm.canScrollLeft = false;\n\n    backend.addOrderInfoListener(function (orderInfo) {\n        vm.orderInfo = orderInfo;\n    }, false, true);\n\n    updateSunInfoByFlights();\n\n    passengersTableContainer.on('scroll', mobileTableScrollHandler);\n\n    if (vm.service.active) {\n        selectFirstAvailablePassengerFlight();\n    }\n\n    function switchService() {\n        if (!vm.locked && !backend.checkServiceRemovalProhibited('seat')) {\n            vm.service.active = !vm.service.active;\n            if (vm.service.active) {\n                selectFirstAvailablePassengerFlight();\n            } else {\n                vm.modifyError = false;\n                backend.removeExtraService({\n                    code: 'seat'\n                }).then(clearFlightPassenger, function (resp) {\n                    if (resp.error) {\n                        vm.modifyError = resp.error;\n                    }\n                });\n            }\n        }\n    }\n\n    function resetService() {\n      vm.modifyError = false;\n      backend.removeExtraService({\n          code: 'seat'\n      }).then(clearFlightPassenger, function (resp) {\n          if (resp.error) {\n              vm.modifyError = resp.error;\n          }\n      });\n    }\n\n    function clearFlightPassenger() {\n        vm.seatMap = false;\n        vm.selectedFlight = -1;\n        vm.selectedPassenger = -1;\n    }\n\n    function setSeatMapContainerTopPosition(reset) {\n        if (reset) {\n            seatMapContainerTopPosition = '0px';\n        } else {\n            seatMapContainerTopPosition = jQuery('#seatMapCont .mCSB_container').css('top');\n        }\n    }\n\n    function selectFlightPassenger(flightNum, passengerNum) {\n        // Нужно запомнить положение карты мест для переключения между пассажирами одного сегмента\n        setSeatMapContainerTopPosition(vm.selectedFlight !== flightNum);\n        vm.selectedFlight = flightNum;\n        vm.selectedPassenger = passengerNum;\n        updateSeatMap();\n    }\n\n    function selectFirstAvailablePassengerFlight() {\n        vm.selectedFlight = getFirstAvailableFlightNum();\n        vm.selectedPassenger = getFirstAvailablePassengerNum(vm.selectedFlight);\n        updateSeatMap();\n    }\n\n    function updateSeatMap() {\n\n        if (vm.selectedPassenger !== -1 && vm.selectedFlight !== -1) {\n            vm.loadingSeatMap = true;\n            vm.seatMapError = false;\n            backend.seatMap(\n                vm.orderInfo.passengers[vm.selectedPassenger].id,\n                vm.orderInfo.plainFlights[vm.selectedFlight].id\n            ).then(function (resp) {\n                vm.seatMap = resp;\n                vm.loadingSeatMap = false;\n                $timeout(function () {\n                    jQuery('#seatMapCont .mCSB_container').css('top', seatMapContainerTopPosition);\n                });\n            }, function (resp) {\n                vm.seatMapError = resp.error;\n                vm.loadingSeatMap = false;\n            });\n        }\n\n    }\n\n    function setPassengerFlightSeat(chair, cabinAllowed, rowNumber) {\n        if (!vm.locked) {\n            if (chair.available && cabinAllowed) {\n                setSeatMapContainerTopPosition();\n                vm.modifyError = false;\n                backend.modifyExtraService({\n                    code: 'seat',\n                    passenger_id: vm.orderInfo.passengers[vm.selectedPassenger].id,\n                    segment_id: vm.orderInfo.plainFlights[vm.selectedFlight].id,\n                    value: rowNumber + chair.number,\n                    subgroup: vm.service.commonSubgroup,\n                    rfisc: chair.rfisc || '',\n                    service_type: 'F'\n                }).then(updateSeatMap, function (resp) {\n                    if (resp.error) {\n                        vm.modifyError = resp.error;\n                    }\n                });\n            }\n        }\n    }\n\n    function updateSunInfoByFlights() {\n        vm.sunInfoByFlights = [];\n        vm.orderInfo.plainFlights.forEach(function (flight, flightNum) {\n            backend.sunInfo(\n                flight.origincity,\n                flight.departuredate,\n                flight.departuretime,\n                flight.destinationcity,\n                flight.arrivaldate,\n                flight.arrivaltime\n            ).then(function (resp) {\n                vm.sunInfoByFlights[flightNum] = resp;\n            });\n        });\n    }\n\n    function getFirstAvailableFlightNum() {\n        var i;\n        for (i = 0; i < vm.orderInfo.plainFlights.length; i++) {\n            if (vm.service.availableBySegments[i]) {\n                return i;\n            }\n        }\n        return -1;\n    }\n\n    function getFirstAvailablePassengerNum(flightNum) {\n        var i;\n        if (vm.service.availableByPassengerSegments) {\n            for (i = 0; i < vm.orderInfo.passengers.length; i++) {\n                if (vm.service.availableByPassengerSegments[i][flightNum]) {\n                    return i;\n                }\n            }\n        }\n        return -1;\n    }\n\n    function scrollToStart() {\n        passengersTableContainer.scrollTo(0);\n    }\n\n    function scrollToEnd() {\n        passengersTableContainer.scrollTo(passengersTableContainer[0].scrollWidth);\n    }\n\n    function mobileTableScrollHandler() {\n        var scrollLeft = passengersTableContainer[0].scrollLeft,\n            scrollWidth = passengersTableContainer[0].scrollWidth,\n            clientWidth = passengersTableContainer[0].clientWidth,\n            scrollRight = scrollWidth - clientWidth - scrollLeft;\n        vm.canScrollRight = (scrollRight !== 0);\n        vm.canScrollLeft = (scrollLeft !== 0);\n        $scope.$apply();\n    }\n\n    function getAvailablePassengersCountWrap(availableByPassengerSegments) {\n        var count = utils.getAvailablePassengersCount(availableByPassengerSegments);\n        return count + vm.orderInfo.passengers.filter(function (pax) {\n            return !pax.hasSeats;\n        }).length;\n    }\n\n    function removePassengerFlightSeat(passengerNum, flightNum) {\n        if (\n            !vm.locked && !backend.checkServiceRemovalProhibited('seat', passengerNum, flightNum)\n        ) {\n            vm.modifyError = false;\n            backend.removeExtraService({\n                code: 'seat',\n                passenger_id: vm.orderInfo.passengers[passengerNum].id,\n                segment_id: vm.orderInfo.plainFlights[flightNum].id\n            }).then(function () {\n                if (vm.selectedFlight === flightNum) {\n                    updateSeatMap();\n                }\n            }, function (resp) {\n                if (resp.error) {\n                    vm.modifyError = resp.error;\n                }\n            });\n        }\n    }\n\n}\n\n},{}],4:[function(require,module,exports){\n\"use strict\";\nrequire('./components/es-meal-pegas/es-meal-pegas');\r\nrequire('./components/es-seat-pegas/es-seat-pegas');\r\nrequire('./components/es-baggage-pegas/es-baggage-pegas');\r\n\n},{\"./components/es-baggage-pegas/es-baggage-pegas\":1,\"./components/es-meal-pegas/es-meal-pegas\":2,\"./components/es-seat-pegas/es-seat-pegas\":3}]},{},[4]);\n"]}